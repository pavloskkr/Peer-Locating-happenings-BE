import {IEventRepository} from "../../domain/interfaces/IEventRepository";
import {IEvent} from "../../domain/interfaces/IEvent";
import AppDataSource from "../database/ormconfig";

export class EventRepository implements IEventRepository {
    private  eventRepository = AppDataSource.getRepository(Event)
    create(event: IEvent): Promise<IEvent> {
        const newEvent =
    }

    delete(id: string): Promise<void> {
        return Promise.resolve(undefined);
    }

    findAll(): Promise<IEvent[]> {
        return Promise.resolve([]);
    }

    findByDate(date: Date): Promise<IEvent[]> {
        return Promise.resolve([]);
    }

    findByEventType(eventType: string): Promise<IEvent[]> {
        return Promise.resolve([]);
    }

    findById(id: string): Promise<IEvent | null> {
        return Promise.resolve(undefined);
    }

    findByUserId(userId: string): Promise<IEvent[]> {
        return Promise.resolve([]);
    }

    update(event: IEvent): Promise<IEvent> {
        return Promise.resolve(undefined);
    }

}